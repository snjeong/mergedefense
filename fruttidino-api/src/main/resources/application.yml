####################################
# Profile Settings
####################################
spring:
  profiles:
    group:
      "local": "local,common"
      "dev": "dev,common"
      "stage": "stage,common"
      "prod": "prod,common"

---
####################################
# Local Settings
####################################
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    url: jdbc:postgresql://db-frutti-dev-3011.6xw.cockroachlabs.cloud:26257/db-frutti-dev-3011.defaultdb?sslmode=verify-full&sslrootcert=/Users/neo/.postgresql/fruttidino-dev.crt
    username: db4user
    password: fruttisu4user
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout : 30000
      maximumPoolSize : 10
      maxLifetime : 1800000
      poolName : HikariCP
      readOnly : false
      connectionTestQuery : SELECT 1
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDB201Dialect
        check_nullability : true
        format_sql : true
    #show-sql: true #query debugging
#  redis:
#    host: localhost
#    port: 6379
#    ttl: 10 #cache ttl
cloud:
  aws:
    credentials:
      instance-profile: true
      access-key: AKIATTDOIGFNUO53JLAM
      secret-key: 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
    region:
      auto: false
      static: ap-southeast-1 # AWS SQS의 리전정보
    stack:
      auto: false
    sqs:
      queue:
        name: fdt-nft-event-testnet-dev.fifo	# AWS에서 생성한 Queue 이름
        url: https://sqs.ap-southeast-1.amazonaws.com/247191843163/fdt-nft-event-testnet-dev.fifo # 생성한
---
####################################
# Dev Settings
####################################
spring:
  config:
    activate:
      on-profile: "dev"
  datasource:
    url: jdbc:postgresql://db-frutti-dev-3011.6xw.cockroachlabs.cloud:26257/db-frutti-dev-3011.defaultdb?sslmode=verify-full&sslrootcert=/Users/neo/.postgresql/fruttidino-dev.crt
    username: db4user
    password: fruttisu4user
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout : 30000
      maximumPoolSize : 10
      maxLifetime : 1800000
      poolName : HikariCP
      readOnly : false
      connectionTestQuery : SELECT 1
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDB201Dialect
        check_nullability : true
        format_sql : true
    show-sql: true
#  redis:
#    host: localhost
#    port: 6379
#    ttl: 10 #cache ttl
cloud:
  aws:
    credentials:
      instance-profile: true
      access-key: AKIATTDOIGFNUO53JLAM
      secret-key: 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
    region:
      auto: false
      static: ap-southeast-1 # AWS SQS의 리전정보
    stack:
      auto: false
    sqs:
      queue:
        name: fdt-nft-event-testnet-dev.fifo	# AWS에서 생성한 Queue 이름
        url: https://sqs.ap-southeast-1.amazonaws.com/247191843163/fdt-nft-event-testnet-dev.fifo # 생성한

---
####################################
# Stage Settings
####################################
spring:
  config:
    activate:
      on-profile: "stage"
  datasource:
    url: jdbc:postgresql://db-frutti-stage-1192.6xw.cockroachlabs.cloud:26257/db-frutti-stage-1192.defaultdb?sslmode=verify-full&sslrootcert=/home/ubuntu/frutti-api/deploy/db-frutti-stage-ca.crt
    username: db4user
    password: fruttisu4user
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout : 30000
      maximumPoolSize : 10
      maxLifetime : 1800000
      poolName : HikariCP
      readOnly : false
      connectionTestQuery : SELECT 1
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDB201Dialect
        check_nullability : true
        format_sql : true
    show-sql: true
#  redis:
#    host: frutti-stage-redis.or9ryi.ng.0001.apse1.cache.amazonaws.com
#    port: 6379
#    ttl: 10 #cache ttl
cloud:
  aws:
    credentials:
      instance-profile: true
      access-key: AKIATTDOIGFNUO53JLAM
      secret-key: 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
    region:
      auto: false
      static: ap-southeast-1 # AWS SQS의 리전정보
    stack:
      auto: false
    sqs:
      queue:
        name: fdt-nft-event-testnet.fifo	# AWS에서 생성한 Queue 이름
        url: https://sqs.ap-southeast-1.amazonaws.com/247191843163/fdt-nft-event-testnet.fifo # 생성한
---
####################################
# Production Settings
####################################
spring:
  config:
    activate:
      on-profile: "prod"
  datasource:
    url: jdbc:postgresql://db-frutti-prod-7x9.aws-ap-southeast-1.cockroachlabs.cloud:26257/defaultdb?sslmode=verify-full&sslrootcert=/home/ubuntu/frutti-api/deploy/db-frutti-prod-ca.crt
    #url: jdbc:postgresql://db-frutti-prod-7x9.aws-ap-southeast-1.cockroachlabs.cloud:26257/defaultdb?sslmode=verify-full&sslrootcert=/Users/neo/Library/CockroachCloud/certs/db-frutti-prod-ca.crt
    username: db4user
    password: fruttisu4user
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-test-query: SELECT 1
      connection-timeout: 3000
      validation-timeout: 3000
      minimum-idle: 5
      max-lifetime: 240000
      maximum-pool-size: 20
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDB201Dialect
        check_nullability : true
        format_sql : true
    show-sql: true
#  redis:
#    host: frutti-prod-redis.or9ryi.clustercfg.apse1.cache.amazonaws.com
#    port: 6379
#    ttl: 10080 #cache ttl, 10080 minutes(7days)
cloud:
  aws:
    credentials:
      instance-profile: true
      access-key: AKIATTDOIGFNUO53JLAM
      secret-key: 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
    region:
      static: ap-southeast-1 # AWS SQS의 리전정보
    stack:
      auto: false
    sqs:
      queue:
        name: fdt-nft-event-prod.fifo	# AWS에서 생성한 Queue 이름
        url: https://sqs.ap-southeast-1.amazonaws.com/247191843163/fdt-nft-event-prod.fifo # 생성한
---
####################################
# Common Settings
####################################
springdoc:
  version: 'v1.0'
  api-docs:
    groups:
      enabled: true
  swagger-ui:
    path: /frutti-dino-api.html
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
  show-actuator: true
  group-configs:
  - group: frutti-apis
    paths-to-match: /**
spring:
  main:
    allow-bean-definition-overriding: true
  config:
    activate:
      on-profile: "common"
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
#  cache:
#    type: redis
#    redis:
#      cache-null-values: true
server:
  port: 10001
  output:
    ansi:
      enabled: ALWAYS
  liquibase:
    change-log: classpath:db/changelog-master.xml
    default-schema:
    drop-first: false
    contexts: crdb
    enabled: true
  error:          # This application has no explicit mapping for /error, so you are seeing this as a fallback.
    whitelabel:
      enabled: false
logging:
  config: classpath:log4j2.xml
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
    #org.hibernate.SQL: debug